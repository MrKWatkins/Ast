name: Build, Test and Package

on:
  push:
  pull_request:

jobs:
  BuildTestAndPackage:
    name: Build, Test and Package
    runs-on: ubuntu-latest
    env:
      Version: "0.9.${{ github.RUN_NUMBER }}"
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build /p:Version=$Version --no-restore --configuration Release

      - name: Test
        run: dotnet test --no-restore --no-build --configuration Release --logger "trx;LogFileName=test-results.trx" --collect:"XPlat Code Coverage"

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Results
          path: "**/TestResults/test-results.trx"
          reporter: dotnet-trx

      - name: Aggregate Coverage Reports
        run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-reportgenerator-globaltool
          dotnet tool run reportgenerator "-reports:**/TestResults/**/coverage.cobertura.xml" "-targetdir:." "-reportTypes:Cobertura"

      - name: Generate Coverage Report
        uses: irongut/CodeCoverageSummary@v1.2.0
        with:
          filename: Cobertura.xml
          format: markdown
          indicators: true
          output: file
          thresholds: '50 60'

      - name: Attach Coverage Report to Build
        uses: dtinth/markdown-report-action@v1
        with:
          name: Test Coverage
          title: Test Coverage
          body-file: code-coverage-results.md

      - name: Publish to NuGet
        uses: tedd/publish-nuget-neo@v1
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          NUGET_KEY: ${{ secrets.NUGET_API_KEY }}
          PROJECT_FILE_PATH: MrKWatkins.Ast/MrKWatkins.Ast.csproj
          TAG_COMMIT: true
          PACKAGE_NAME: MrKWatkins.Ast
          VERSION_STATIC: ${{ env.Version }}
